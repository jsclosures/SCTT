
D:\apps\solr-8.2.0\server\scripts\cloud-scripts\zkcli.bat -cmd upconfig -z localhost:9983 -confname validate -confdir validate/confdir

D:\apps\solr-8.2.0\server\scripts\cloud-scripts\zkcli.bat -cmd putfile -z localhost:9983 /security.json validate\security.json

asssets:

{
        "assetname":"interpretScript",
        "assettype":"script",
        "assetnotes":"aW50ZXJwcmV0",
        "assetscript_s":"",
        "id":"ASSET1692807197004",
        "contenttype":"ASSET",
        "crawldate":"2023-09-15T19:17:38.621Z",
        "assetscript":"",
        "_version_":1777132328580022272},
      {
        "assetname":"detailsScript",
        "assettype":"script",
        "assetnotes":"",
        "assetscript_s":"testName=",
        "id":"ASSET1695307336511",
        "contenttype":"ASSET",
        "crawldate":"2023-09-22T17:10:44.147Z",
        "assetscript":"ZnVuY3Rpb24oY29tbWFuZExpbmUsY2FsbGJhY2spewoKdmFyIHNvbHJIb3N0ID0gQ09OVEVYVC5TT0xSSE9TVDsKICAgICAgICB2YXIgc29sclBvcnQgPSBDT05URVhULlNPTFJQT1JUOwogICAgICAgIHZhciBzb2xyUGF0aCA9ICIvYXBpL3NvbHIvdmFsaWRhdGUvc2VsZWN0P3E9KjoqIjsKICAgICAgICAKICAgICAgICBsZXQgdGVzdE5hbWUgPSAiZGVmYXVsdCI7IAoKICAgICAgICBpZiggY29tbWFuZExpbmUudGVzdG5hbWUgKQogICAgICAgICAgICB0ZXN0TmFtZSA9IGFyZ3MucXVlcnlPYmoudGVzdG5hbWU7CiAgICAgICAgCiAgICAgICAgaWYoIHRlc3ROYW1lICl7CiAgICAgICAgICAgIHNvbHJQYXRoICs9ICImZnE9dGVzdG5hbWU6IiArIHRlc3ROYW1lOwogICAgICAgIH0KICAgICAgICB2YXIgZmluYWxSZXN1bHQgPSB7aXRlbXM6IFtdfTsKCiAgICAgICAgdmFyIGNvbGxlY3RvckNCID0gZnVuY3Rpb24oZGF0YSl7CiAgICAgICAgICAgIGlmKCBkYXRhLml0ZW1zICl7CiAgICAgICAgICAgICAgICB0aGlzLnJlc3VsdC5pdGVtcyA9IHRoaXMucmVzdWx0Lml0ZW1zLmNvbmNhdChkYXRhLml0ZW1zKTsKICAgICAgICAgICAgICAgIHRoaXMucmVzdWx0Lm51bUZvdW5kID0gdGhpcy5yZXN1bHQuX3RvdGFsSXRlbXM7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiY29uY2F0IGl0ZW1zIix0aGlzLnJlc3VsdCx0aGlzKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYoIHRoaXMubmV4dEVudHJ5ICkKICAgICAgICAgICAgICAgIENPTlRFWFQubGliLmdldFJFU1REYXRhKHtob3N0OiBzb2xySG9zdCxwb3J0OiBzb2xyUG9ydCxwYXRoOiB0aGlzLm5leHRFbnRyeS5wYXRoLHR5cGU6IHRoaXMubmV4dEVudHJ5LnR5cGUsY2FsbGJhY2s6IHRoaXMubmV4dEVudHJ5LmNhbGxiYWNrLGVudHJ5OiB0aGlzLm5leHRFbnRyeX0pOwogICAgICAgICAgICBlbHNlCiAgICAgICAgICAgICAgICB0aGlzLmNhbGxiYWNrKHRoaXMucmVzdWx0KTsKICAgICAgICB9CiAgICAgICAgdmFyIHBhdGhMaXN0ID0gWwogICAgICAgICAgICAgICAgICAgICAgICB7dHlwZTogInF1ZXJ5IixsYWJlbDogIlN1bW1hcnlNYXhRVGltZXMiLGZpZWxkOiAicXRpbWUiLHBhdGg6IHNvbHJQYXRoICsgIiZmcT1jb250ZW50dHlwZTpTVU1NQVJZJnJvd3M9MSZzb3J0PXF0aW1lK2Rlc2MifSwKICAgICAgICAgICAgICAgICAgICAgICAge3R5cGU6ICJxdWVyeSIsbGFiZWw6ICJTdW1tYXJ5TWF4Um93Q291bnQiLGZpZWxkOiAicm93Y291bnQiLHBhdGg6IHNvbHJQYXRoICsgIiZmcT1jb250ZW50dHlwZTpTVU1NQVJZJnJvd3M9MSZzb3J0PXJvd2NvdW50K2Rlc2MifSwKICAgICAgICAgICAgICAgICAgICAgICAge3R5cGU6ICJxdWVyeSIsbGFiZWw6ICJTdW1tYXJ5TWluUVRpbWUiLGZpZWxkOiAicXRpbWUiLHBhdGg6IHNvbHJQYXRoICsgIiZmcT1jb250ZW50dHlwZTpTVU1NQVJZJnJvd3M9MSZzb3J0PXF0aW1lK2FzYyJ9LAogICAgICAgICAgICAgICAgICAgICAgICB7dHlwZTogInF1ZXJ5IixsYWJlbDogIlN1bW1hcnlNaW5Sb3dDb3VudCIsZmllbGQ6ICJyb3djb3VudCIscGF0aDogc29sclBhdGggKyAiJmZxPWNvbnRlbnR0eXBlOlNVTU1BUlkmcm93cz0xJnNvcnQ9cm93Y291bnQrYXNjIn0sCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICB7dHlwZTogInF1ZXJ5IixsYWJlbDogIkJlZm9yZU1heFFUaW1lIixmaWVsZDogInF0aW1lIixwYXRoOiBzb2xyUGF0aCArICImZnE9Y29udGVudHR5cGU6QkVGT1JFJnJvd3M9MSZzb3J0PXF0aW1lK2Rlc2MifSwKICAgICAgICAgICAgICAgICAgICAgICAge3R5cGU6ICJxdWVyeSIsbGFiZWw6ICJCZWZvcmVNYXhSb3dDb3VudCIsZmllbGQ6ICJyb3djb3VudCIscGF0aDogc29sclBhdGggKyAiJmZxPWNvbnRlbnR0eXBlOkJFRk9SRSZyb3dzPTEmc29ydD1yb3djb3VudCtkZXNjIn0sCiAgICAgICAgICAgICAgICAgICAgICAgIHt0eXBlOiAicXVlcnkiLGxhYmVsOiAiQWZ0ZXJNYXhRVGltZSIsZmllbGQ6ICJxdGltZSIscGF0aDogc29sclBhdGggKyAiJmZxPWNvbnRlbnR0eXBlOkFGVEVSJnJvd3M9MSZzb3J0PXF0aW1lK2Rlc2MifSwKICAgICAgICAgICAgICAgICAgICAgICAge3R5cGU6ICJxdWVyeSIsbGFiZWw6ICJBZnRlck1heFJvd0NvdW50IixmaWVsZDogInJvd2NvdW50IixwYXRoOiBzb2xyUGF0aCArICImZnE9Y29udGVudHR5cGU6QUZURVImcm93cz0xJnNvcnQ9cm93Y291bnQrZGVzYyJ9LAogICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgICAgICAgICAgICAgICAgIHt0eXBlOiAicXVlcnkiLGxhYmVsOiAiQmVmb3JlTWluUVRpbWUiLGZpZWxkOiAicXRpbWUiLHBhdGg6IHNvbHJQYXRoICsgIiZmcT1jb250ZW50dHlwZTpCRUZPUkUmcm93cz0xJnNvcnQ9cXRpbWUrYXNjIn0sCiAgICAgICAgICAgICAgICAgICAgICAgIHt0eXBlOiAicXVlcnkiLGxhYmVsOiAiQmVmb3JlTWluUm93Q291bnQiLGZpZWxkOiAicm93Y291bnQiLHBhdGg6IHNvbHJQYXRoICsgIiZmcT1jb250ZW50dHlwZTpCRUZPUkUmcm93cz0xJnNvcnQ9cm93Y291bnQrYXNjIn0sCiAgICAgICAgICAgICAgICAgICAgICAgIHt0eXBlOiAicXVlcnkiLGxhYmVsOiAiQWZ0ZXJNaW5RVGltZSIsZmllbGQ6ICJxdGltZSIscGF0aDogc29sclBhdGggKyAiJmZxPWNvbnRlbnR0eXBlOkFGVEVSJnJvd3M9MSZzb3J0PXF0aW1lK2FzYyJ9LAogICAgICAgICAgICAgICAgICAgICAgICB7dHlwZTogInF1ZXJ5IixsYWJlbDogIkFmdGVyTWluUm93Q291bnQiLGZpZWxkOiAicm93Y291bnQiLHBhdGg6IHNvbHJQYXRoICsgIiZmcT1jb250ZW50dHlwZTpBRlRFUiZyb3dzPTEmc29ydD1yb3djb3VudCthc2MifSwKCiAgICAgICAgICAgICAgICAgICAgICAgIC8qe3R5cGU6ICJxdWVyeSIsbGFiZWw6ICJaZXJvUm93Q291bnRBIixmaWVsZDogInJvd2NvdW50YSIscGF0aDogc29sclBhdGggKyAiJmZxPWNvbnRlbnR0eXBlOkFGVEVSJmZxPXJvd2NvdW50YTowJnJvd3M9MSZzb3J0PXJvd2NvdW50YSthc2MifSwKICAgICAgICAgICAgICAgICAgICAgICAge3R5cGU6ICJxdWVyeSIsbGFiZWw6ICJaZXJvUm93Q291bnRCIixmaWVsZDogInJvd2NvdW50YiIscGF0aDogc29sclBhdGggKyAiJmZxPWNvbnRlbnR0eXBlOkJFRk9SRSZmcT1yb3djb3VudGI6MCZyb3dzPTEmc29ydD1yb3djb3VudGIrYXNjIn0sCiAgICAgICAgICAgICAgICAgICAgICAgIHt0eXBlOiAicXVlcnkiLGxhYmVsOiAiWmVyb1Jvd0NvdW50IixmaWVsZDogInJvd2NvdW50IixwYXRoOiBzb2xyUGF0aCArICImZnE9Y29udGVudHR5cGU6QkVGT1JFJmZxPXJvd2NvdW50OjAmcm93cz0xJnNvcnQ9cm93Y291bnQrYXNjIn0sKi8KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIHt0eXBlOiAiZmFjZXQiLHBhdGg6IHNvbHJQYXRoICsgIiZmYWNldC5maWVsZD1jb250ZW50dHlwZSZmYWNldD1vbiZmYWNldC5taW5jb3VudD0xJnJvd3M9MCJ9CiAgICAgICAgICAgICAgICAgICAgICAgIF07CiAgICAgICAgZm9yKGxldCBpID0gMDtpIDwgcGF0aExpc3QubGVuZ3RoO2krKyl7CiAgICAgICAgICAgIGlmKCBpKzEgPCBwYXRoTGlzdC5sZW5ndGggKQogICAgICAgICAgICAgICAgcGF0aExpc3RbaV0uY2FsbGJhY2sgPSBjb2xsZWN0b3JDQi5iaW5kKHthcmdzOiBjb21tYW5kTGluZSxyZXN1bHQ6IGZpbmFsUmVzdWx0LG5leHRFbnRyeTogcGF0aExpc3RbaSsxXSxjYWxsYmFjazogY2FsbGJhY2sgfSk7CiAgICAgICAgICAgIGVsc2UgICAgCiAgICAgICAgICAgICAgICBwYXRoTGlzdFtpXS5jYWxsYmFjayA9IGNvbGxlY3RvckNCLmJpbmQoe2FyZ3M6IGNvbW1hbmRMaW5lLHJlc3VsdDogZmluYWxSZXN1bHQsY2FsbGJhY2s6IGNhbGxiYWNrIH0pOwogICAgICAgIH0KCiAgICAgICAgY29uc29sZS5sb2coInNvbHJwYXRoIixwYXRoTGlzdFswXS5wYXRoKTsKICAgICAgICBDT05URVhULmxpYi5nZXRSRVNURGF0YSh7aG9zdDogc29sckhvc3QscG9ydDogc29sclBvcnQscGF0aDogcGF0aExpc3RbMF0ucGF0aCx0eXBlOiBwYXRoTGlzdFswXS50eXBlLGNhbGxiYWNrOiBwYXRoTGlzdFswXS5jYWxsYmFjayxlbnRyeTogcGF0aExpc3RbMF19KTsKCgp9",
        "_version_":1777758522989084672},
      {
        "assetname":"copyCollectionScript",
        "assettype":"script",
        "assetnotes":"",
        "assetscript_s":"",
        "id":"ASSET1695667632522",
        "contenttype":"ASSET",
        "crawldate":"2023-09-25T18:47:12.826Z",
        "assetscript":"ZnVuY3Rpb24ob0NvbW1hbmRMaW5lKXsKCmZ1bmN0aW9uIGNsb25lQ29sbGVjdGlvbihjb21tYW5kTGluZSl7CnZhciBiYXRjaFNpemUgPSBjb21tYW5kTGluZS5oYXNPd25Qcm9wZXJ0eSgnYmF0Y2hTaXplJykgPyBjb21tYW5kTGluZVsnYmF0Y2hTaXplJ10gOiAxMDAwOwp2YXIgc291cmNlU29scklkRmllbGQgPSBjb21tYW5kTGluZS5oYXNPd25Qcm9wZXJ0eSgnc291cmNlU29scklkRmllbGQnKSA/IGNvbW1hbmRMaW5lWydzb3VyY2VTb2xySWRGaWVsZCddIDogImlkIjsKdmFyIHNvdXJjZVNvbHJRdWVyeSA9IGNvbW1hbmRMaW5lLmhhc093blByb3BlcnR5KCdzb3VyY2VTb2xyUXVlcnknKSA/IGNvbW1hbmRMaW5lWydzb3VyY2VTb2xyUXVlcnknXSA6ICIqOioiOwp2YXIgbG9hZERhdGEgPSBjb21tYW5kTGluZS5oYXNPd25Qcm9wZXJ0eSgnbG9hZERhdGEnKSA/IGNvbW1hbmRMaW5lWydsb2FkRGF0YSddID09ICd0cnVlJyA6IHRydWU7CnZhciB0ZXN0TmFtZSA9IGNvbW1hbmRMaW5lLmhhc093blByb3BlcnR5KCd0ZXN0TmFtZScpID8gY29tbWFuZExpbmVbJ3Rlc3ROYW1lJ10gOiAnZGVmYXVsdCc7Cgp2YXIgc291cmNlU29sckhvc3QgPSBjb21tYW5kTGluZS5oYXNPd25Qcm9wZXJ0eSgnc291cmNlU29sckhvc3QnKSA/IGNvbW1hbmRMaW5lWydzb3VyY2VTb2xySG9zdCddIDogInNvbHJzZXJ2ZXIiOwp2YXIgc291cmNlU29sclBvcnQgPSBjb21tYW5kTGluZS5oYXNPd25Qcm9wZXJ0eSgnc291cmNlU29sclBvcnQnKSA/IGNvbW1hbmRMaW5lWydzb3VyY2VTb2xyUG9ydCddIDogODE4MDsKdmFyIHNvdXJjZVNvbHJDb2xsZWN0aW9uID0gY29tbWFuZExpbmUuaGFzT3duUHJvcGVydHkoJ3NvdXJjZVNvbHJDb2xsZWN0aW9uJykgPyBjb21tYW5kTGluZVsnc291cmNlU29sckNvbGxlY3Rpb24nXSA6ICdjb2xsZWN0aW9uMSc7CnZhciBzb3VyY2VTb2xyUGF0aCA9IGNvbW1hbmRMaW5lLmhhc093blByb3BlcnR5KCdzb3VyY2VTb2xyUGF0aCcpID8gY29tbWFuZExpbmVbJ3NvdXJjZVNvbHJQYXRoJ10gOiAiL3NvbHIvIiArIHNvdXJjZVNvbHJDb2xsZWN0aW9uICsgIi9zZWxlY3Q/d3Q9anNvbiZzb3J0PSIgKyBzb3VyY2VTb2xySWRGaWVsZCArICIrYXNjJnJvd3M9IiArIGJhdGNoU2l6ZSArICImcT0iICsgc291cmNlU29sclF1ZXJ5OwoKdmFyIGRlc3RpbmF0aW9uU29sckhvc3QgPSBjb21tYW5kTGluZS5oYXNPd25Qcm9wZXJ0eSgnZGVzdGluYXRpb25Tb2xySG9zdCcpID8gY29tbWFuZExpbmVbJ2Rlc3RpbmF0aW9uU29sckhvc3QnXSA6ICJzb2xyc2VydmVyMiI7CnZhciBkZXN0aW5hdGlvblNvbHJQb3J0ID0gY29tbWFuZExpbmUuaGFzT3duUHJvcGVydHkoJ2Rlc3RpbmF0aW9uU29sclBvcnQnKSA/IGNvbW1hbmRMaW5lWydkZXN0aW5hdGlvblNvbHJQb3J0J10gOiA4MTgwOwp2YXIgZGVzdGluYXRpb25Tb2xyQ29sbGVjdGlvbiA9IGNvbW1hbmRMaW5lLmhhc093blByb3BlcnR5KCdkZXN0aW5hdGlvblNvbHJDb2xsZWN0aW9uJykgPyBjb21tYW5kTGluZVsnZGVzdGluYXRpb25Tb2xyQ29sbGVjdGlvbiddIDogJ2NvbGxlY3Rpb24xJzsKdmFyIGRlc3RpbmF0aW9uU29sclVwZGF0ZVBhdGggPSBjb21tYW5kTGluZS5oYXNPd25Qcm9wZXJ0eSgnZGVzdGluYXRpb25Tb2xyVXBkYXRlUGF0aCcpID8gY29tbWFuZExpbmVbJ2Rlc3RpbmF0aW9uU29sclVwZGF0ZVBhdGgnXSA6ICIvc29sci8iICsgZGVzdGluYXRpb25Tb2xyQ29sbGVjdGlvbiArICIvdXBkYXRlIjsKdmFyIGRlc3RpbmF0aW9uU29sckNvbmZpZ1NldCA9IGNvbW1hbmRMaW5lLmhhc093blByb3BlcnR5KCdkZXN0aW5hdGlvblNvbHJDb25maWdTZXQnKSA/IGNvbW1hbmRMaW5lWydkZXN0aW5hdGlvblNvbHJDb25maWdTZXQnXSA6IGZhbHNlOwp2YXIgZG9TeW5jTG9hZCA9IGNvbW1hbmRMaW5lLmhhc093blByb3BlcnR5KCdkb1N5bmNMb2FkJykgPyBjb21tYW5kTGluZVsnZG9TeW5jTG9hZCddIDogdHJ1ZTsKdmFyIGpteEluZm9Qb3J0ID0gY29tbWFuZExpbmUuaGFzT3duUHJvcGVydHkoJ2pteEluZm9Qb3J0JykgPyBjb21tYW5kTGluZVsnam14SW5mb1BvcnQnXSA6IDE4MTgwOwp2YXIgdmFsaWRhdGVTb2xySG9zdCA9IGNvbW1hbmRMaW5lLmhhc093blByb3BlcnR5KCd2YWxpZGF0ZVNvbHJIb3N0JykgPyBjb21tYW5kTGluZVsndmFsaWRhdGVTb2xySG9zdCddIDogImxvY2FsaG9zdCI7CnZhciB2YWxpZGF0ZVNvbHJQb3J0ID0gY29tbWFuZExpbmUuaGFzT3duUHJvcGVydHkoJ3ZhbGlkYXRlU29sclBvcnQnKSA/IGNvbW1hbmRMaW5lWyd2YWxpZGF0ZVNvbHJQb3J0J10gOiA4OTgzOwp2YXIgdmFsaWRhdGVTb2xyVXBkYXRlUGF0aCA9IGNvbW1hbmRMaW5lLmhhc093blByb3BlcnR5KCd2YWxpZGF0ZVNvbHJVcGRhdGVQYXRoJykgPyBjb21tYW5kTGluZVsndmFsaWRhdGVTb2xyVXBkYXRlUGF0aCddIDogIi9zb2xyL3ZhbGlkYXRlL3VwZGF0ZSI7CnZhciB2YWxpZGF0ZVNvbHJUeXBlRmllbGQgPSBjb21tYW5kTGluZS5oYXNPd25Qcm9wZXJ0eSgndmFsaWRhdGVTb2xyVHlwZUZpZWxkJykgPyBjb21tYW5kTGluZVsndmFsaWRhdGVTb2xyVHlwZUZpZWxkJ10gOiAiY29udGVudHR5cGUiOwp2YXIgdmFsaWRhdGVTb2xyVHlwZSA9IGNvbW1hbmRMaW5lLmhhc093blByb3BlcnR5KCd2YWxpZGF0ZVNvbHJUeXBlJykgPyBjb21tYW5kTGluZVsndmFsaWRhdGVTb2xyVHlwZSddIDogIk1FTU9SWVVQREFURSI7Cgp2YXIgY3Vyc29yTWFyayA9ICIqIjsKCnZhciBqbXhDbGllbnQgPSBmYWxzZTsKCmlmKCBqbXhJbmZvUG9ydCA+IDAgKXsKCWxldCBjbGllbnQgPSBqbXguY3JlYXRlQ2xpZW50KHsKCSAgaG9zdDogZGVzdGluYXRpb25Tb2xySG9zdCwgLy8gb3B0aW9uYWwKCSAgcG9ydDogam14SW5mb1BvcnQKCX0pOwoJIAoJY2xpZW50LmNvbm5lY3QoKTsKCWNsaWVudC5vbigiY29ubmVjdCIsIGZ1bmN0aW9uKCkgewogCQlqbXhDbGllbnQgPSBjbGllbnQ7CiAJIAljb25zb2xlLmxvZygiSk1YIiwiUkVBRFkiKTsKCX0pOwp9CgpmdW5jdGlvbiBnZXRKTVhTdGF0cyhqbXhDbGllbnQsdGVzdE5hbWUsd2hpY2gsY2FsbGJhY2spewogIGxldCByZXN1bHQgPSB7dGVzdG5hbWU6IHRlc3ROYW1lfTsKICAgIHJlc3VsdFt2YWxpZGF0ZVNvbHJUeXBlRmllbGRdID0gdmFsaWRhdGVTb2xyVHlwZTsKICAgIAogICAgaWYoIGpteENsaWVudCApewogICAgam14Q2xpZW50LmdldEF0dHJpYnV0ZSgiamF2YS5sYW5nOnR5cGU9R2FyYmFnZUNvbGxlY3RvcixuYW1lPUcxIFlvdW5nIEdlbmVyYXRpb24iLCAiQ29sbGVjdGlvbkNvdW50IiwgZnVuY3Rpb24oZGF0YSkgewogICAgICAvL2NvbnNvbGUubG9nKCJNaW5vciBDb2xsZWN0aW9uQ291bnQiLGRhdGEudG9TdHJpbmcoKSk7CiAgICAgIHRoaXMucmVzdWx0Lm1pbm9yY29sbGVjdGlvbmNvdW50X3MgPSBkYXRhLnRvU3RyaW5nKCk7CiAgICAgIC8vY2FsbGJhY2socmVzdWx0KTsKICAgICAgam14Q2xpZW50LmdldEF0dHJpYnV0ZSgiamF2YS5sYW5nOnR5cGU9R2FyYmFnZUNvbGxlY3RvcixuYW1lPUcxIFlvdW5nIEdlbmVyYXRpb24iLCAiQ29sbGVjdGlvblRpbWUiLCBmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgICAvL2NvbnNvbGUubG9nKCJNaW5vciBDb2xsZWN0aW9uVGltZSIsZGF0YS50b1N0cmluZygpKTsKICAgICAgICAgIHRoaXMucmVzdWx0Lm1pbm9yY29sbGVjdGlvbnRpbWVfcyA9IGRhdGEudG9TdHJpbmcoKTsKICAgICAgICAgIC8vY2FsbGJhY2socmVzdWx0KTsKICAgICAgICAgIGpteENsaWVudC5nZXRBdHRyaWJ1dGUoImphdmEubGFuZzp0eXBlPUdhcmJhZ2VDb2xsZWN0b3IsbmFtZT1HMSBPbGQgR2VuZXJhdGlvbiIsICJDb2xsZWN0aW9uQ291bnQiLCBmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgICAgIC8vY29uc29sZS5sb2coIk1ham9yIENvbGxlY3Rpb25Db3VudCIsZGF0YS50b1N0cmluZygpKTsKICAgICAgICAgICAgdGhpcy5yZXN1bHQubWFqb3Jjb2xsZWN0aW9uY291bnRfcyA9IGRhdGEudG9TdHJpbmcoKTsKICAgICAgICAgICAgLy9jYWxsYmFjayhyZXN1bHQpOwogICAgICAgICAgICBqbXhDbGllbnQuZ2V0QXR0cmlidXRlKCJqYXZhLmxhbmc6dHlwZT1HYXJiYWdlQ29sbGVjdG9yLG5hbWU9RzEgT2xkIEdlbmVyYXRpb24iLCAiQ29sbGVjdGlvblRpbWUiLCBmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZygiTWFqb3IgQ29sbGVjdGlvblRpbWUiLGRhdGEudG9TdHJpbmcoKSk7CiAgICAgICAgICAgICAgdGhpcy5yZXN1bHQubWFqb3Jjb2xsZWN0aW9udGltZV9zID0gZGF0YS50b1N0cmluZygpOwoKICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKCJKTVhSRVNVTFQiLHRoaXMucmVzdWx0KTsKICAgICAgICAgICAgICAvL2NhbGxiYWNrKHRoaXMucmVzdWx0KTsKICAgICAgICAgICAgICBqbXhDbGllbnQuZ2V0QXR0cmlidXRlKCJqYXZhLmxhbmc6dHlwZT1NZW1vcnlQb29sLG5hbWU9RzEgRWRlbiBTcGFjZSIsICJVc2FnZSIsIGZ1bmN0aW9uKGRhdGEpIHsKICAgICAgICAgICAgICAgIGxldCB1c2VkID0gZGF0YS5nZXRTeW5jKCd1c2VkJyk7CiAgICAgICAgICAgICAgICB0aGlzLnJlc3VsdC5lZGVudXNhZ2VfcyA9IHVzZWQubG9uZ1ZhbHVlOwoKICAgICAgICAgICAgICAgIGpteENsaWVudC5nZXRBdHRyaWJ1dGUoImphdmEubGFuZzp0eXBlPU1lbW9yeVBvb2wsbmFtZT1HMSBPbGQgR2VuIiwgIlVzYWdlIiwgZnVuY3Rpb24oZGF0YSkgewogICAgICAgICAgICAgICAgICBsZXQgdXNlZCA9IGRhdGEuZ2V0U3luYygndXNlZCcpOwogICAgICAgICAgICAgICAgICB0aGlzLnJlc3VsdC5vbGRnZW51c2FnZV9zID0gdXNlZC5sb25nVmFsdWU7CgogICAgICAgICAgICAgICAgICBjYWxsYmFjayh0aGlzLnJlc3VsdCk7CiAgICAgICAgICAgICAgICB9LmJpbmQoe3Jlc3VsdDogdGhpcy5yZXN1bHR9KSk7CiAgICAgICAgICAgICAgfS5iaW5kKHtyZXN1bHQ6IHRoaXMucmVzdWx0fSkpOwogICAgICAgICAgICB9LmJpbmQoe3Jlc3VsdDogdGhpcy5yZXN1bHR9KSk7CiAgICAgICAgICB9LmJpbmQoe3Jlc3VsdDogdGhpcy5yZXN1bHR9KSk7CiAgICAgICAgfS5iaW5kKHtyZXN1bHQ6IHRoaXMucmVzdWx0fSkpOwogICAgfS5iaW5kKHtyZXN1bHQ6IHJlc3VsdH0pKTsgIAogIH0KCiAgcmV0dXJuKCByZXN1bHQgKTsKfQoKZnVuY3Rpb24gcXVlcnlDYWxsYmFjayhyZXMpIHsKICBsZXQgc3RyID0gIiI7CiAgCQkKICByZXMub24oJ2RhdGEnLCBmdW5jdGlvbiAoY2h1bmspIHsKICAgICAgICAgICAgICBzdHIgKz0gY2h1bms7CiAgICAgICAgICAgICAgCiAgICAgICAgfSk7CgogIHJlcy5vbignZW5kJywgZnVuY3Rpb24gKCkgewogICAgICAgIC8vY29uc29sZS5sb2cocmVzLmZpZWxkKTsKCQkvL2NvbnNvbGUubG9nKHN0cik7CgkJCgkJbGV0IGRhdGEgPSBKU09OLnBhcnNlKHN0cik7CgkJCgkJaWYoIGRhdGEucmVzcG9uc2UgJiYgZGF0YS5yZXNwb25zZS5kb2NzICl7CgkJCWZvcihsZXQgZCBpbiBkYXRhLnJlc3BvbnNlLmRvY3MpewoJCQkJbGV0IGRvYyA9IGRhdGEucmVzcG9uc2UuZG9jc1tkXTsKCQkJCWZvciggbGV0IHAgaW4gZG9jKXsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9kb2NbIlByU3RhdHVzIl0gPSA0OwoJCQkJCWlmKCBkb2MuaGFzT3duUHJvcGVydHkocCkgKXsKCQkJCQkJaWYoIHAgPT09ICdfdmVyc2lvbl8nIHx8IHAgPT09ICdzY29yZScgKXsKCQkJCQkJCQoJCQkJCQkJZGVsZXRlIGRvY1twXTsKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJCQoJCQl9CgkJCQoJCQljb3B5RG9jdW1lbnRzKGRhdGEucmVzcG9uc2UuZG9jcyxkYXRhKTsKCQl9CgkJLy9jb25zb2xlLmxvZyhkYXRhKTsKCQlpZiggIWRvU3luY0xvYWQgKXsKCQkJaWYoIGRhdGEubmV4dEN1cnNvck1hcmsgKXsKCQkJCWlmKCBjdXJzb3JNYXJrICE9IGRhdGEubmV4dEN1cnNvck1hcmsgKXsJCgkJCQkJY3Vyc29yTWFyayA9IGRhdGEubmV4dEN1cnNvck1hcms7CgkJCQkJbG9hZFF1ZXJ5QmF0Y2goY3Vyc29yTWFyaykKCQkJCX0KCQkJCWVsc2UgewoJCQkJCWNvbnNvbGUubG9nKCJjb21wbGV0ZSIpOwoJCQkJCWRvQ29tbWl0KCk7CgkJCQl9CgkJCX0KCQl9CiAgfSk7Cn0KCmZ1bmN0aW9uIHN0YXRzVXBkYXRlQ2FsbGJhY2socmVzKSB7CiAgbGV0IHN0ciA9ICIiOwogIGxldCBkYXRhID0gdGhpcy5kYXRhOwogIHJlcy5vbignZGF0YScsIGZ1bmN0aW9uIChjaHVuaykgewogICAgICAgICAgICAgIHN0ciArPSBjaHVuazsKICAgICAgICAgICAgICAKICAgICAgICB9KTsKCiAgcmVzLm9uKCdlbmQnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgY29uc29sZS5sb2coIlNUQVRTVVBEQVRFIixzdHIpOwogIH0pOwp9CgoKZnVuY3Rpb24gc2F2ZVVwZGF0ZVN0YXRzKHJlc3BEYXRhLHF1ZXJ5RGF0YSl7CglsZXQgY2IgPSBmdW5jdGlvbihqbXhEYXRhKXsKCQlsZXQgdENhbGxiYWNrID0gc3RhdHNVcGRhdGVDYWxsYmFjay5iaW5kKHtyZXNwRGF0YTogcmVzcERhdGEsZGF0YTogcXVlcnlEYXRhfSk7CgoJCWpteERhdGEucXRpbWUgPSByZXNwRGF0YS5yZXNwb25zZUhlYWRlci5RVGltZTsKCgkJbGV0IGRvY3MgPSBbIGpteERhdGEgXTsKCQljb25zb2xlLmxvZyhkb2NzKTsKCQlsZXQgdCA9IGh0dHAucmVxdWVzdCh7aG9zdG5hbWU6IHZhbGlkYXRlU29sckhvc3QscG9ydDogdmFsaWRhdGVTb2xyUG9ydCxwYXRoOiB2YWxpZGF0ZVNvbHJVcGRhdGVQYXRoLG1ldGhvZDogJ1BPU1QnLGhlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nfX0sIHRDYWxsYmFjayk7CgkJdC5vbignZXJyb3InLCBmdW5jdGlvbihlKSB7Y29uc29sZS5sb2coIkdvdCBlcnJvcjogIiArIGUubWVzc2FnZSk7fSk7CgkJdC53cml0ZShKU09OLnN0cmluZ2lmeShkb2NzKSk7CgkJdC5lbmQoKTsKCX07CgoJZ2V0Sk1YU3RhdHMoam14Q2xpZW50LHRlc3ROYW1lLCJBTEwiLGNiKTsKfQoKZnVuY3Rpb24gdXBkYXRlQ2FsbGJhY2socmVzKSB7CiAgbGV0IHN0ciA9ICIiOwogIGxldCBkYXRhID0gdGhpcy5kYXRhOwogIHJlcy5vbignZGF0YScsIGZ1bmN0aW9uIChjaHVuaykgewogICAgICAgICAgICAgIHN0ciArPSBjaHVuazsKICAgICAgICAgICAgICAKICAgICAgICB9KTsKCiAgcmVzLm9uKCdlbmQnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgY29uc29sZS5sb2coIlVQREFURSIsc3RyKTsKICAgICAgICBsZXQgcmVzcERhdGEgPSBKU09OLnBhcnNlKHN0cik7CiAgICAgICAgc2F2ZVVwZGF0ZVN0YXRzKHJlc3BEYXRhLGRhdGEpOwoKICAgICAgICBpZiggZG9TeW5jTG9hZCApewogICAgICAgIAlpZiggZGF0YS5uZXh0Q3Vyc29yTWFyayApewoJCQkJaWYoIGN1cnNvck1hcmsgIT0gZGF0YS5uZXh0Q3Vyc29yTWFyayApewkKCQkJCQljdXJzb3JNYXJrID0gZGF0YS5uZXh0Q3Vyc29yTWFyazsKCQkJCQlsb2FkUXVlcnlCYXRjaChjdXJzb3JNYXJrKTsKCQkJCX0KCQkJCWVsc2UgewoJCQkJCWNvbnNvbGUubG9nKCJjb21wbGV0ZSIpOwoJCQkJCWRvQ29tbWl0KCk7CgkJCQl9CgkJCX0KICAgICAgICB9CiAgfSk7Cn0KCmZ1bmN0aW9uIGNvbW1pdENhbGxiYWNrKHJlcykgewogIGxldCBzdHIgPSAiIjsKICByZXMub24oJ2RhdGEnLCBmdW5jdGlvbiAoY2h1bmspIHsKICAgICAgICAgICAgICBzdHIgKz0gY2h1bms7CiAgICAgICAgICAgICAgCiAgICAgICAgfSk7CgogIHJlcy5vbignZW5kJywgZnVuY3Rpb24gKCkgewogICAgICAgIGNvbnNvbGUubG9nKCJDT01NSVQiKTsKCQkKCQlyZWxvYWRDb2xsZWN0aW9uKGRlc3RpbmF0aW9uU29sckNvbGxlY3Rpb24sdHJ1ZSk7CgoJCWlmKCBjb21tYW5kTGluZS5jYWxsYmFjayApewoJCQljb21tYW5kTGluZS5jYWxsYmFjaygpOwoJCX0KICB9KTsKfQoKZnVuY3Rpb24gY29weURvY3VtZW50cyhkb2NzLGRhdGEpewoJbGV0IHRDYWxsYmFjayA9IHVwZGF0ZUNhbGxiYWNrLmJpbmQoe2RhdGE6IGRhdGF9KTsKCQljb25zb2xlLmxvZyhkZXN0aW5hdGlvblNvbHJIb3N0LGRlc3RpbmF0aW9uU29sclVwZGF0ZVBhdGgpOwoJbGV0IHQgPSBodHRwLnJlcXVlc3Qoe2hvc3RuYW1lOiBkZXN0aW5hdGlvblNvbHJIb3N0LHBvcnQ6IGRlc3RpbmF0aW9uU29sclBvcnQscGF0aDogZGVzdGluYXRpb25Tb2xyVXBkYXRlUGF0aCxtZXRob2Q6ICdQT1NUJyxoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ319LCB0Q2FsbGJhY2spOwoJdC5vbignZXJyb3InLCBmdW5jdGlvbihlKSB7Y29uc29sZS5sb2coIkdvdCBlcnJvcjogIiArIGUubWVzc2FnZSk7fSk7Cgl0LndyaXRlKEpTT04uc3RyaW5naWZ5KGRvY3MpKTsKCXQuZW5kKCk7Cn0KCmZ1bmN0aW9uIGxvYWRRdWVyeUJhdGNoKGN1cnNvck1hcmspewoJaWYoIGxvYWREYXRhICl7CgkJY29uc29sZS5sb2coIkRPSU5HV09SSyIpOwoJCWxldCB0Q2FsbGJhY2sgPSBxdWVyeUNhbGxiYWNrLmJpbmQoe30pOwoJCQoJCWxldCB0U291cmNlU29sclBhdGggPSBzb3VyY2VTb2xyUGF0aCArICImY3Vyc29yTWFyaz0iICsgY3Vyc29yTWFyazsKCQlsZXQgdCA9IGh0dHAucmVxdWVzdCh7aG9zdG5hbWU6IHNvdXJjZVNvbHJIb3N0LHBvcnQ6IHNvdXJjZVNvbHJQb3J0LHBhdGg6IHRTb3VyY2VTb2xyUGF0aCxtZXRob2Q6ICdHRVQnLGhlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nfX0sIHRDYWxsYmFjayk7CgkJdC5vbignZXJyb3InLCBmdW5jdGlvbihlKSB7Y29uc29sZS5sb2coIkdvdCBlcnJvcjogIiArIGUubWVzc2FnZSk7fSk7CgkJdC5lbmQoKTsKCX0KCWVsc2UgewoJCWNvbnNvbGUubG9nKCJOT1RET0lOR1dPUksiKTsKCX0KfQoKZnVuY3Rpb24gZG9Db21taXQoKXsKCWxldCB0Q2FsbGJhY2sgPSBjb21taXRDYWxsYmFjay5iaW5kKHt9KTsKCWxldCB0ID0gaHR0cC5nZXQoe2hvc3Q6IGRlc3RpbmF0aW9uU29sckhvc3QscG9ydDogZGVzdGluYXRpb25Tb2xyUG9ydCxwYXRoOiBkZXN0aW5hdGlvblNvbHJVcGRhdGVQYXRoICsgIj9zdHJlYW0uYm9keT08Y29tbWl0Lz4ifSwgdENhbGxiYWNrKTsKfQoKZnVuY3Rpb24gcmVsb2FkQ29sbGVjdGlvbkNhbGxiYWNrKHJlcykgewogIGxldCBzdHIgPSAiIjsKICBsZXQgY29sbGVjdGlvbiA9IHRoaXMuY29sbGVjdGlvbjsKICBsZXQgZG9Ob3RoaW5nID0gdGhpcy5kb05vdGhpbmc7CiAgCiAgcmVzLm9uKCdkYXRhJywgZnVuY3Rpb24gKGNodW5rKSB7CiAgICAgICAgICAgICAgc3RyICs9IGNodW5rOwogICAgICAgICAgICAgIAogICAgICAgIH0pOwoKICByZXMub24oJ2VuZCcsIGZ1bmN0aW9uICgpIHsKICAgICAgICBjb25zb2xlLmxvZygiUkVMT0FEQ09MTEVDVElPTiIpOwoJCWlmKCAhZG9Ob3RoaW5nICkKCQkJbG9hZFF1ZXJ5QmF0Y2goY3Vyc29yTWFyayk7CgkJCQogIH0pOwp9CgoKZnVuY3Rpb24gcmVsb2FkQ29sbGVjdGlvbihjb2xsZWN0aW9uTmFtZSxkb05vdGhpbmcpewoJbGV0IHRDYWxsYmFjayA9IHJlbG9hZENvbGxlY3Rpb25DYWxsYmFjay5iaW5kKHtjb2xsZWN0aW9uOiBjb2xsZWN0aW9uTmFtZSxkb05vdGhpbmc6IGRvTm90aGluZ30pOwoJbGV0IHRTb2xyUGF0aCA9ICIvc29sci9hZG1pbi9jb2xsZWN0aW9ucz9fPTE1NzIyNzkyMzI2NTYmYWN0aW9uPVJFTE9BRCZuYW1lPSIgKyBjb2xsZWN0aW9uTmFtZSArICImd3Q9anNvbiI7CgkKCWxldCB0ID0gaHR0cC5nZXQoe2hvc3Q6IGRlc3RpbmF0aW9uU29sckhvc3QscG9ydDogZGVzdGluYXRpb25Tb2xyUG9ydCxjb2xsZWN0aW9uOiBjb2xsZWN0aW9uTmFtZSxwYXRoOiB0U29sclBhdGh9LCB0Q2FsbGJhY2spOwp9CgoKZnVuY3Rpb24gY29weUZpZWxkc0NhbGxiYWNrKHJlcykgewogIGxldCBzdHIgPSAiIjsKICBsZXQgY29sbGVjdGlvbiA9IHRoaXMuY29sbGVjdGlvbjsKICAKICByZXMub24oJ2RhdGEnLCBmdW5jdGlvbiAoY2h1bmspIHsKICAgICAgICAgICAgICBzdHIgKz0gY2h1bms7CiAgICAgICAgICAgICAgCiAgICAgICAgfSk7CgogIHJlcy5vbignZW5kJywgZnVuY3Rpb24gKCkgewogICAgICAgIGNvbnNvbGUubG9nKCJDT1BZRklFTERTIik7CgkJbGV0IHJlc3AgPSBKU09OLnBhcnNlKHN0cik7CgkJCgkJaWYoIHJlc3AuZmllbGRzICl7CgkJCWZpZWxkTGlzdCA9IHJlc3AuZmllbGRzOwoJCQlmb3IobGV0IGkgaW4gcmVzcC5maWVsZHMpewoJCQkJbGV0IHRGaWVsZCA9IHJlc3AuZmllbGRzW2ldOwoJCQkJY29weUZpZWxkVG9EZXN0aW5hdGlvbihjb2xsZWN0aW9uLHRGaWVsZCk7CgkJCX0KCQl9CgkJZWxzZSB7CgkJCWNvbnNvbGUubG9nKCJOT0ZJRUxEUyIscmVzcCk7CgkJfQoJCQogIH0pOwp9Cgp2YXIgZmllbGRMaXN0Q291bnRlciA9IDA7CnZhciBmaWVsZExpc3QgPSBmYWxzZTsKZnVuY3Rpb24gY29weUZpZWxkcyhjb2xsZWN0aW9uTmFtZSl7Cgljb25zb2xlLmxvZygiTE9BRElOR0ZJRUxEUyIsY29sbGVjdGlvbk5hbWUpOwoJbGV0IHRDYWxsYmFjayA9IGNvcHlGaWVsZHNDYWxsYmFjay5iaW5kKHtjb2xsZWN0aW9uOiBjb2xsZWN0aW9uTmFtZX0pOwoJbGV0IHQgPSBodHRwLmdldCh7aG9zdDogc291cmNlU29sckhvc3QscG9ydDogc291cmNlU29sclBvcnQsY29sbGVjdGlvbjogZGVzdGluYXRpb25Tb2xyQ29sbGVjdGlvbixwYXRoOiAiL3NvbHIvIiArIHNvdXJjZVNvbHJDb2xsZWN0aW9uICsgIi9zY2hlbWEvZmllbGRzP3d0PWpzb24ifSwgdENhbGxiYWNrKTsKfQoKZnVuY3Rpb24gY29weUZpZWxkVG9EZXN0aW5hdGlvbkNhbGxiYWNrKHJlcykgewogIGxldCBzdHIgPSAiIjsKICBsZXQgY29sbGVjdGlvbiA9IHRoaXMuY29sbGVjdGlvbjsKICByZXMub24oJ2RhdGEnLCBmdW5jdGlvbiAoY2h1bmspIHsKICAgICAgICAgICAgICBzdHIgKz0gY2h1bms7CiAgICAgICAgICAgICAgCiAgICAgICAgfSk7CgogIHJlcy5vbignZW5kJywgZnVuY3Rpb24gKCkgewogICAgICAgIAoJCWZpZWxkTGlzdENvdW50ZXIrKzsKCQkKCQlpZiggZmllbGRMaXN0Q291bnRlciA9PSBmaWVsZExpc3QubGVuZ3RoICl7CgkJCWNvbnNvbGUubG9nKCJBRERMQVNURklFTEQiLHN0cik7CgkJCXJlbG9hZENvbGxlY3Rpb24oY29sbGVjdGlvbik7CgkJfQoJCWVsc2UgewoJCQljb25zb2xlLmxvZygiQURERklFTEQiLHN0cik7CgkJfQoJCQogIH0pOwp9CgpmdW5jdGlvbiBjb3B5RmllbGRUb0Rlc3RpbmF0aW9uKGNvbGxlY3Rpb25OYW1lLHBheWxvYWQpewoJbGV0IHRDYWxsYmFjayA9IGNvcHlGaWVsZFRvRGVzdGluYXRpb25DYWxsYmFjay5iaW5kKHtjb2xsZWN0aW9uOiBjb2xsZWN0aW9uTmFtZSxmaWVsZDogcGF5bG9hZH0pOwoJbGV0IHREZXN0aW5hdGlvblNvbHJQYXRoID0gIi9zb2xyLyIgKyBjb2xsZWN0aW9uTmFtZSArICIvc2NoZW1hIjsKCWxldCB0ID0gaHR0cC5yZXF1ZXN0KHtob3N0bmFtZTogZGVzdGluYXRpb25Tb2xySG9zdCxwb3J0OiBkZXN0aW5hdGlvblNvbHJQb3J0LHBhdGg6IHREZXN0aW5hdGlvblNvbHJQYXRoLG1ldGhvZDogJ1BPU1QnLGhlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nfX0sIHRDYWxsYmFjayk7Cgl0Lm9uKCdlcnJvcicsIGZ1bmN0aW9uKGUpIHtjb25zb2xlLmxvZygiR290IGVycm9yOiAiICsgZS5tZXNzYWdlKTt9KTsKCXQud3JpdGUoSlNPTi5zdHJpbmdpZnkoeyJhZGQtZmllbGQiOiBwYXlsb2FkIH0pKTsKCXQuZW5kKCk7Cn0KCmZ1bmN0aW9uIGNvcHlGaWVsZFR5cGVUb0Rlc3RpbmF0aW9uQ2FsbGJhY2socmVzKSB7CiAgbGV0IHN0ciA9ICIiOwogIGxldCBjb2xsZWN0aW9uID0gdGhpcy5jb2xsZWN0aW9uOwogIAogIHJlcy5vbignZGF0YScsIGZ1bmN0aW9uIChjaHVuaykgewogICAgICAgICAgICAgIHN0ciArPSBjaHVuazsKICAgICAgICAgICAgICAKICAgICAgICB9KTsKCiAgcmVzLm9uKCdlbmQnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgZmllbGRUeXBlTGlzdENvdW50ZXIrKzsKCQkKCQlpZiggZmllbGRUeXBlTGlzdENvdW50ZXIgPT0gZmllbGRUeXBlTGlzdC5sZW5ndGggKXsKCQkJY29uc29sZS5sb2coIkFERExBU1RGSUVMRFRZUEUiLHN0cik7CgkJCgkJCWNvcHlGaWVsZHMoY29sbGVjdGlvbik7CgkJfQoJCWVsc2UgewoJCQljb25zb2xlLmxvZygiQURERklFTERUWVBFIixzdHIpOwoJCX0KICB9KTsKfQoKZnVuY3Rpb24gY29weUZpZWxkVHlwZVRvRGVzdGluYXRpb24oY29sbGVjdGlvbk5hbWUscGF5bG9hZCl7CglsZXQgdENhbGxiYWNrID0gY29weUZpZWxkVHlwZVRvRGVzdGluYXRpb25DYWxsYmFjay5iaW5kKHtjb2xsZWN0aW9uOiBjb2xsZWN0aW9uTmFtZSxmaWVsZFR5cGU6IHBheWxvYWR9KTsKCWxldCB0RGVzdGluYXRpb25Tb2xyUGF0aCA9ICIvc29sci8iICsgY29sbGVjdGlvbk5hbWUgKyAiL3NjaGVtYSI7CglsZXQgdCA9IGh0dHAucmVxdWVzdCh7aG9zdG5hbWU6IGRlc3RpbmF0aW9uU29sckhvc3QscG9ydDogZGVzdGluYXRpb25Tb2xyUG9ydCxwYXRoOiB0RGVzdGluYXRpb25Tb2xyUGF0aCxtZXRob2Q6ICdQT1NUJyxoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ319LCB0Q2FsbGJhY2spOwoJdC5vbignZXJyb3InLCBmdW5jdGlvbihlKSB7Y29uc29sZS5sb2coIkdvdCBlcnJvcjogIiArIGUubWVzc2FnZSk7fSk7Cgl0LndyaXRlKEpTT04uc3RyaW5naWZ5KHsiYWRkLWZpZWxkLXR5cGUiOiBwYXlsb2FkIH0pKTsKCXQuZW5kKCk7Cn0KCnZhciBmaWVsZFR5cGVMaXN0Q291bnRlciA9IDA7CnZhciBmaWVsZFR5cGVMaXN0ID0gZmFsc2U7CmZ1bmN0aW9uIGNvcHlGaWVsZFR5cGVzQ2FsbGJhY2socmVzKSB7CiAgbGV0IHN0ciA9ICIiOwogIGxldCBjb2xsZWN0aW9uID0gdGhpcy5jb2xsZWN0aW9uOwogIAogIHJlcy5vbignZGF0YScsIGZ1bmN0aW9uIChjaHVuaykgewogICAgICAgICAgICAgIHN0ciArPSBjaHVuazsKICAgICAgICAgICAgICAKICAgICAgICB9KTsKCiAgcmVzLm9uKCdlbmQnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgY29uc29sZS5sb2coIkNPUFlGSUVMRFRZUEVTIik7CgkJbGV0IHJlc3AgPSBKU09OLnBhcnNlKHN0cik7CgkJCgkJaWYoIHJlc3AuZmllbGRUeXBlcyApewoJCQlmaWVsZFR5cGVMaXN0ID0gcmVzcC5maWVsZFR5cGVzOwoJCQlmb3IobGV0IGkgaW4gcmVzcC5maWVsZFR5cGVzKXsKCQkJCWxldCB0RmllbGRUeXBlID0gcmVzcC5maWVsZFR5cGVzW2ldOwoJCQkJY29weUZpZWxkVHlwZVRvRGVzdGluYXRpb24oY29sbGVjdGlvbix0RmllbGRUeXBlKTsKCQkJfQoJCX0KCQllbHNlIHsKCQkJY29uc29sZS5sb2coIk5PRklFTERUWVBFUyIsc3RyKTsKCQl9CiAgfSk7Cn0KCmZ1bmN0aW9uIGNvcHlGaWVsZFR5cGVzKGNvbGxlY3Rpb25OYW1lKXsKCWxldCB0Q2FsbGJhY2sgPSBjb3B5RmllbGRUeXBlc0NhbGxiYWNrLmJpbmQoe2NvbGxlY3Rpb246IGNvbGxlY3Rpb25OYW1lfSk7CglsZXQgdCA9IGh0dHAuZ2V0KHtob3N0OiBzb3VyY2VTb2xySG9zdCxwb3J0OiBzb3VyY2VTb2xyUG9ydCxjb2xsZWN0aW9uOiBkZXN0aW5hdGlvblNvbHJDb2xsZWN0aW9uLHBhdGg6ICIvc29sci8iICsgc291cmNlU29sckNvbGxlY3Rpb24gKyAiL3NjaGVtYS9maWVsZHR5cGVzP3d0PWpzb24ifSwgdENhbGxiYWNrKTsKfQoKZnVuY3Rpb24gYnVpbGRDb2xsZWN0aW9uQ2FsbGJhY2socmVzKSB7CiAgbGV0IHN0ciA9ICIiOwogIGxldCBjb2xsZWN0aW9uID0gdGhpcy5jb2xsZWN0aW9uOwogIAogIHJlcy5vbignZGF0YScsIGZ1bmN0aW9uIChjaHVuaykgewogICAgICAgICAgICAgIHN0ciArPSBjaHVuazsKICAgICAgICAgICAgICAKICAgICAgICB9KTsKCiAgcmVzLm9uKCdlbmQnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgY29uc29sZS5sb2coIkJVSUxEQ09MTEVDVElPTiIsc3RyKTsKCQkKCQlpZiggZGVzdGluYXRpb25Tb2xyQ29uZmlnU2V0ICl7CgkJCWxvYWRRdWVyeUJhdGNoKGN1cnNvck1hcmspOwoJCX0KCQllbHNlIHsKCQkJY29weUZpZWxkVHlwZXMoY29sbGVjdGlvbik7CgkJfQogIH0pOwp9CgpmdW5jdGlvbiBidWlsZENvbGxlY3Rpb24oY29sbGVjdGlvbk5hbWUpewoJbGV0IHRDYWxsYmFjayA9IGJ1aWxkQ29sbGVjdGlvbkNhbGxiYWNrLmJpbmQoe2NvbGxlY3Rpb246IGNvbGxlY3Rpb25OYW1lfSk7CgkKCWxldCB0U29sclBhdGggPSAiL3NvbHIvYWRtaW4vY29sbGVjdGlvbnM/Xz0xNTcyMjc5MjMyNjU2JmFjdGlvbj1DUkVBVEUmYXV0b0FkZFJlcGxpY2FzPWZhbHNlJm1heFNoYXJkc1Blck5vZGU9MSZuYW1lPSIgKyBjb2xsZWN0aW9uTmFtZSArICImbnVtU2hhcmRzPTEmcmVwbGljYXRpb25GYWN0b3I9MSZyb3V0ZXIubmFtZT1jb21wb3NpdGVJZCZ3dD1qc29uIjsKCQoJaWYoIGRlc3RpbmF0aW9uU29sckNvbmZpZ1NldCApewoJCXRTb2xyUGF0aCArPSAiJmNvbGxlY3Rpb24uY29uZmlnTmFtZT0iICsgZGVzdGluYXRpb25Tb2xyQ29uZmlnU2V0OwoJfQoJCglsZXQgdCA9IGh0dHAuZ2V0KHtob3N0OiBkZXN0aW5hdGlvblNvbHJIb3N0LHBvcnQ6IGRlc3RpbmF0aW9uU29sclBvcnQsY29sbGVjdGlvbjogZGVzdGluYXRpb25Tb2xyQ29sbGVjdGlvbixwYXRoOiB0U29sclBhdGh9LCB0Q2FsbGJhY2spOwp9CgoKZnVuY3Rpb24gZGVzdGluYXRpb25DaGVja0NhbGxiYWNrKHJlcykgewogIGxldCBzdHIgPSAiIjsKICBsZXQgY29sbGVjdGlvbiA9IHRoaXMuY29sbGVjdGlvbjsKICAKICByZXMub24oJ2RhdGEnLCBmdW5jdGlvbiAoY2h1bmspIHsKICAgICAgICAgICAgICBzdHIgKz0gY2h1bms7CiAgICAgICAgICAgICAgCiAgICAgICAgfSk7CgogIHJlcy5vbignZW5kJywgZnVuY3Rpb24gKCkgewogICAgICAgIGNvbnNvbGUubG9nKCJDTFVTVEVSU1RBVFVTIik7CgkJbGV0IGNsdXN0ZXJTdGF0dXMgPSBKU09OLnBhcnNlKHN0cik7CgkJCgkJaWYoIGNsdXN0ZXJTdGF0dXMuY2x1c3RlciAgJiYgY2x1c3RlclN0YXR1cy5jbHVzdGVyLmNvbGxlY3Rpb25zICYmIGNsdXN0ZXJTdGF0dXMuY2x1c3Rlci5jb2xsZWN0aW9uc1tjb2xsZWN0aW9uXSApewoJCQlsb2FkUXVlcnlCYXRjaChjdXJzb3JNYXJrKTsKCQl9CgkJZWxzZSB7CgkJCS8vY3JlYXRlIGNvbGxlY3Rpb24KCQkJY29uc29sZS5sb2coIk5PIERFU1RJTkFUSU9OIixjb2xsZWN0aW9uKTsKCQkJYnVpbGRDb2xsZWN0aW9uKGNvbGxlY3Rpb24pOwoJCX0KICB9KTsKfQoKCgoKZnVuY3Rpb24gY2hlY2tEZXN0aW5hdGlvbigpewoJaWYoICFjb21tYW5kTGluZS5kaXNhYmxlZCApewoJCWxldCB0Q2FsbGJhY2sgPSBkZXN0aW5hdGlvbkNoZWNrQ2FsbGJhY2suYmluZCh7Y29sbGVjdGlvbjogZGVzdGluYXRpb25Tb2xyQ29sbGVjdGlvbn0pOwoJCWxldCB0ID0gaHR0cC5nZXQoe2hvc3Q6IGRlc3RpbmF0aW9uU29sckhvc3QscG9ydDogZGVzdGluYXRpb25Tb2xyUG9ydCxjb2xsZWN0aW9uOiBkZXN0aW5hdGlvblNvbHJDb2xsZWN0aW9uLHBhdGg6ICIvc29sci9hZG1pbi9jb2xsZWN0aW9ucz9hY3Rpb249Q0xVU1RFUlNUQVRVUyZ3dD1qc29uIn0sIHRDYWxsYmFjayk7Cgl9CgllbHNlIHsKCQlpZiggY29tbWFuZExpbmUuY2FsbGJhY2sgKXsKCQkJY29uc29sZS5sb2coIkNBTExCQUNLIiwiZG9pbmcgY2FsbGJhY2siKTsKCQkJY29tbWFuZExpbmUuY2FsbGJhY2soKTsKCQl9CgkJZWxzZSB7CgkJCWNvbnNvbGUubG9nKCJDT01QTEVURSIsIm5vIGNhbGxiYWNrIGFuZCBkaXNhYmxlZCIpOwoJCX0KCX0KfQoKCmNoZWNrRGVzdGluYXRpb24oKTsKCgp9CgoKbGV0IHNvdXJjZVNvbHJBID0ge3Rlc3ROYW1lOiBvQ29tbWFuZExpbmUudGVzdE5hbWUgPyBvQ29tbWFuZExpbmUudGVzdE5hbWUgOiJkZW5vcm0iLAoJCQkJCXNvdXJjZVNvbHJIb3N0OiBvQ29tbWFuZExpbmUuc291cmNlU29sckhvc3RBID8gb0NvbW1hbmRMaW5lLnNvdXJjZVNvbHJIb3N0QSA6ImMzLnNvbHJjbG91ZC5zZXJ2aWNlLmludHJhYm8xLmNvbnN1bC5jc256b28uY29tIiwKCQkJCQlzb3VyY2VTb2xyUG9ydDogb0NvbW1hbmRMaW5lLnNvdXJjZVNvbHJQb3J0QSA/IG9Db21tYW5kTGluZS5zb3VyY2VTb2xyUG9ydEEgOiI4MTgwIiwKCQkJCQlzb3VyY2VTb2xyQ29sbGVjdGlvbjogb0NvbW1hbmRMaW5lLnNvdXJjZVNvbHJDb2xsZWN0aW9uQSA/IG9Db21tYW5kTGluZS5zb3VyY2VTb2xyQ29sbGVjdGlvbkEgOiJkZW5vcm1fdXMiLAoJCQkJCXNvdXJjZVNvbHJJZEZpZWxkOiBvQ29tbWFuZExpbmUuc291cmNlU29scklkRmllbGQgPyBvQ29tbWFuZExpbmUuc291cmNlU29scklkRmllbGQgOiJQclNLVU9wdGlvbkNvbWJpbmF0aW9uSUQiLAoJCQkJCWRlc3RpbmF0aW9uU29sckhvc3Q6IG9Db21tYW5kTGluZS5kZXN0aW5hdGlvblNvbHJIb3N0QSA/IG9Db21tYW5kTGluZS5kZXN0aW5hdGlvblNvbHJIb3N0QSA6InNvbHJjbG91ZGMyM24xLmhvc3QuYm8xLmNzbnpvby5jb20iLAoJCQkJCWRlc3RpbmF0aW9uU29sclBvcnQ6IG9Db21tYW5kTGluZS5kZXN0aW5hdGlvblNvbHJQb3J0QSA/IG9Db21tYW5kTGluZS5kZXN0aW5hdGlvblNvbHJQb3J0QSA6IjgxODAiLAoJCQkJCWRlc3RpbmF0aW9uU29sckNvbGxlY3Rpb246IG9Db21tYW5kTGluZS5kZXN0aW5hdGlvblNvbHJDb2xsZWN0aW9uQSA/IG9Db21tYW5kTGluZS5kZXN0aW5hdGlvblNvbHJDb2xsZWN0aW9uQSA6ICJkZW5vcm1fdXNfYmVmb3JlIiwKCQkJCQlkaXNhYmxlZDogdHJ1ZSwKCQkJCQlqbXhJbmZvUG9ydDogMTgxODAsCiAgICAgICAgICAgICAgICAgICAgdmFsaWRhdGVTb2xyVHlwZTogIk1FTU9SWVVQREFURUJFRk9SRSJ9OwoKZm9yKGxldCBhIGluIG9Db21tYW5kTGluZSl7Cglzb3VyY2VTb2xyQVthXSA9IG9Db21tYW5kTGluZVthXTsKfQoKbGV0IGNhbGxiYWNrID0gZnVuY3Rpb24oKXsKCWNvbnNvbGUubG9nKCJjb21wbGV0ZWQgZnJvbSBzdGFydGluZyBhZnRlciIpOwogICAgbGV0IG9Db21tYW5kTGluZSA9IHRoaXMub0NvbW1hbmRMaW5lOwoKCWxldCBzb3VyY2VTb2xyQiA9IHt0ZXN0TmFtZTogb0NvbW1hbmRMaW5lLnRlc3ROYW1lID8gb0NvbW1hbmRMaW5lLnRlc3ROYW1lIDoiZGVub3JtIiwKCQkJCQlzb3VyY2VTb2xySG9zdDogb0NvbW1hbmRMaW5lLmRlc3RpbmF0aW9uU29sckhvc3RBID8gb0NvbW1hbmRMaW5lLmRlc3RpbmF0aW9uU29sckhvc3RBIDoic29scmNsb3VkYzIzbjEuaG9zdC5ibzEuY3Nuem9vLmNvbSIsCgkJCQkJc291cmNlU29sclBvcnQ6IG9Db21tYW5kTGluZS5kZXN0aW5hdGlvblNvbHJQb3J0QSA/IG9Db21tYW5kTGluZS5kZXN0aW5hdGlvblNvbHJQb3J0QSA6IjgxODAiLAoJCQkJCXNvdXJjZVNvbHJDb2xsZWN0aW9uOiBvQ29tbWFuZExpbmUuZGVzdGluYXRpb25Tb2xyQ29sbGVjdGlvbkEgPyBvQ29tbWFuZExpbmUuZGVzdGluYXRpb25Tb2xyQ29sbGVjdGlvbkEgOiJkZW5vcm1fdXNfYmVmb3JlIiwKCQkJCQlzb3VyY2VTb2xySWRGaWVsZDogb0NvbW1hbmRMaW5lLnNvdXJjZVNvbHJJZEZpZWxkID8gb0NvbW1hbmRMaW5lLnNvdXJjZVNvbHJJZEZpZWxkIDoiUHJTS1VPcHRpb25Db21iaW5hdGlvbklEIiwKCQkJCQlkZXN0aW5hdGlvblNvbHJIb3N0OiBvQ29tbWFuZExpbmUuZGVzdGluYXRpb25Tb2xySG9zdEIgPyBvQ29tbWFuZExpbmUuZGVzdGluYXRpb25Tb2xySG9zdEIgOiJzb2xyY2xvdWRjMjNuMi5ob3N0LmJvMS5jc256b28uY29tIiwKCQkJCQlkZXN0aW5hdGlvblNvbHJQb3J0OiBvQ29tbWFuZExpbmUuZGVzdGluYXRpb25Tb2xyUG9ydEIgPyBvQ29tbWFuZExpbmUuZGVzdGluYXRpb25Tb2xyUG9ydEIgOiI4MTgwIiwKCQkJCQlkZXN0aW5hdGlvblNvbHJDb2xsZWN0aW9uOiBvQ29tbWFuZExpbmUuZGVzdGluYXRpb25Tb2xyQ29sbGVjdGlvbkIgPyBvQ29tbWFuZExpbmUuZGVzdGluYXRpb25Tb2xyQ29sbGVjdGlvbkIgOiJkZW5vcm1fdXNfYWZ0ZXIiLAogICAgICAgICAgICAgICAgICAgIHZhbGlkYXRlU29sclR5cGU6ICJNRU1PUllVUERBVEVBRlRFUiJ9OwoJCglmb3IobGV0IGEgaW4gb0NvbW1hbmRMaW5lKXsKCQlzb3VyY2VTb2xyQlthXSA9IG9Db21tYW5kTGluZVthXTsKCX0KCgljbG9uZUNvbGxlY3Rpb24oc291cmNlU29sckIpOwoKfS5iaW5kKHtvQ29tbWFuZExpbmU6IG9Db21tYW5kTGluZX0pOwoKc291cmNlU29sckEuY2FsbGJhY2sgPSBjYWxsYmFjazsKCmNsb25lQ29sbGVjdGlvbihzb3VyY2VTb2xyQSk7CgoKCn0=",
        "_version_":1778036383759204352},
      {
        "assetname":"summaryExportScript",
        "assettype":"script",
        "assetnotes":"",
        "assetscript_s":"",
        "id":"ASSET1695081264116",
        "contenttype":"ASSET",
        "crawldate":"2023-09-26T17:28:17.931Z",
        "assetscript":"",
        "_version_":1778122015828344832},
      {
        "assetname":"extractGroupScript",
        "assettype":"script",
        "assetnotes":"",
        "assetscript_s":"",
        "id":"ASSET1695822084300",
        "contenttype":"ASSET",
        "crawldate":"2023-10-10T03:32:52.964Z",
        "assetscript":"",
        "_version_":1779337813519499264},
      {
        "assetname":"extractScript",
        "assettype":"script",
        "assetnotes":"ZXh0cmFjdCBzY3JpcHQ=",
        "assetscript_s":"",
        "id":"ASSET1692806543531",
        "contenttype":"ASSET",
        "crawldate":"2023-10-10T02:49:10.918Z",
        "assetscript":"",
        "_version_":1779335064104992768},
      {
        "assetname":"summarizeScript",
        "assettype":"script",
        "assetnotes":"",
        "assetscript_s":"",
        "id":"ASSET1692807162568",
        "contenttype":"ASSET",
        "crawldate":"2023-09-22T16:55:33.943Z",
        "assetscript":"",
        "_version_":1777757568572063744},
      {
        "assetname":"harvestLogFilesScript",
        "assettype":"script",
        "assetnotes":"",
        "assetscript_s":"",
        "id":"ASSET1695667657013",
        "contenttype":"ASSET",
        "crawldate":"2023-09-25T18:47:37.250Z",
        "assetscript":"ZnVuY3Rpb24oY29tbWFuZExpbmUpewpsZXQgY29uZmlnID0gewoJCQkgIGhvc3Q6ICdzb2xyc2VydmVyJywKCQkJICBwb3J0OiAyMiwKCQkJICB1c2VybmFtZTogY29tbWFuZExpbmUudXNlcm5hbWUsCgkJCSAgcGFzc3dvcmQ6IGNvbW1hbmRMaW5lLnBhc3N3b3JkCgkJCX07CgpmdW5jdGlvbiByZWRhY3Qob2JqLGZpZWxkTmFtZSl7CiAgbGV0IHJlc3VsdCA9ICcnOwoKZm9yKGxldCBwIGluIG9iail7CiAgIGlmKCBwICE9IGZpZWxkTmFtZSApewogICAgICAgIHJlc3VsdCArPSAiICIgKyBwICsgIjoiICsgb2JqW3BdOwogICB9Cn0KCgpyZXR1cm4oIHJlc3VsdCApOwp9CgpmdW5jdGlvbiB3cml0ZUxvZ0xpbmUob3V0U3RyZWFtLGxvZyl7CglvdXRTdHJlYW0ud3JpdGUobG9nICsgIlxuIik7Cn0KCmxldCBzaHV0RG93biA9IGZhbHNlOwpsZXQgc2h1dERvd25Db3VudGVyID0gMDsKZnVuY3Rpb24gY2hlY2tTaXplKGNsaWVudCxjYil7CglsZXQgc3RhdHMgPSBmcy5zdGF0U3luYyhjb21tYW5kTGluZS5vdXRGaWxlTmFtZSk7Cgljb25zb2xlLmxvZyhzdGF0cy5zaXplKTsKCXNodXREb3duQ291bnRlcisrOwoJaWYoIHN0YXRzLnNpemUgPj0gY29tbWFuZExpbmUubWF4U2l6ZSAgfHwgc2h1dERvd25Db3VudGVyID4gMjAwICl7CgkJaWYoIGNsaWVudCAmJiAhc2h1dERvd24pewoJCQlzaHV0RG93biA9IHRydWU7CgkJCWNiKCk7CgkJfQoJfQoJZWxzZSB7CgkJc2V0VGltZW91dChjaGVja1NpemUsNTAwMCxjbGllbnQsY2IpOwoJfQp9CgoKZnVuY3Rpb24gY29weUZpbGVGaXJzdChjb25maWcsY2FsbGJhY2spewogICAgbGV0IGZpbGVOYW1lSW4gPSAnL3dheWZhaXIvZGF0YS9zb2xyL3Zhci9sb2dzL3NvbHIubG9nJzsKICAgIGxldCBmaWxlTmFtZU91dCA9ICcvdG1wL3NvbHIubG9nJzsKICAgIGNvbnNvbGUubG9nKHJlZGFjdChjb25maWcsInBhc3N3b3JkIikpOwoJdmFyIGNvbm4gPSBuZXcgU1NIQ2xpZW50KCk7Cgljb25uLm9uKCdyZWFkeScsIGZ1bmN0aW9uKCkgewoJICAgIGNvbnNvbGUubG9nKCdDbGllbnQgOjogcmVhZHknKTsKCSAgICBjb25uLmV4ZWMoJ3N1ZG8gY2F0ICcgKyBmaWxlTmFtZUluICsgJyA+ICcgKyBmaWxlTmFtZU91dCwgeyBwdHk6IHRydWUgfSwgZnVuY3Rpb24oZXJyLCBzdHJlYW0pIHsKCSAgICAgICAgaWYgKGVycikgdGhyb3cgZXJyOwoJICAgICAgICBzdHJlYW0ub24oJ2Nsb3NlJywgZnVuY3Rpb24oY29kZSwgc2lnbmFsKSB7CgkgICAgICAgICAgICBjb25zb2xlLmxvZygnU3RyZWFtIDo6IGNsb3NlIDo6IGNvZGU6ICcgKyBjb2RlICsgJywgc2lnbmFsOiAnICsgc2lnbmFsKTsKCSAgICAgICAgICAgIGNvbm4uZW5kKCk7CgkgICAgICAgICAgICBjYWxsYmFjayh7c3RhdHVzOiAxfSk7CgkgICAgICAgIH0pLm9uKCdkYXRhJywgZnVuY3Rpb24oZGF0YSkgewoJICAgICAgICAgICAgaWYgKGRhdGEuaW5kZXhPZignOicpID49IGRhdGEubGVuZ3RoIC0gMikgewoJICAgICAgICAgICAgc3RyZWFtLndyaXRlKGNvbmZpZy5wYXNzd29yZCArICdcbicpOwpjb25zb2xlLmxvZygic2V0dGluZyBwYXNzd29yZCIpOwoJICAgICAgICAgICAgfQoJICAgICAgICAgICAgZWxzZSB7CgkgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1NURE9VVDogJyArIGRhdGEpOwoJICAgICAgICAgICAgfQoJICAgICAgICAgICAgY2FsbGJhY2soe3N0YXR1czogMX0pOwoJICAgICAgICB9KS5zdGRlcnIub24oJ2RhdGEnLCBmdW5jdGlvbihkYXRhKSB7CgkgICAgICAgICAgICBjb25zb2xlLmxvZygnU1RERVJSOiAnICsgZGF0YSk7CgkgICAgICAgIH0pOwoJICAgIH0pOwoJfSkuY29ubmVjdChjb25maWcpOwp9CgpmdW5jdGlvbiBnZXRDb3JlTG9nQ2FsbGJhY2socmVzKSB7CglsZXQgc3RyID0gIiI7CiAgICBsZXQgb3V0RmlsZU5hbWUgPSB0aGlzLm91dEZpbGVOYW1lOwogICAgbGV0IG91dFN0cmVhbSA9IHRoaXMub3V0U3RyZWFtOwoJbGV0IGNhbGxiYWNrID0gdGhpcy5jYWxsYmFjazsKCWxldCBjb3JlTGlzdCA9IHRoaXMuY29yZUxpc3Q7CglsZXQgaW5kZXggPSB0aGlzLmluZGV4OwogICAgbGV0IGNsaWVudCA9IHRoaXMuY2xpZW50OwogICAgbGV0IGRldGFpbHMgPSB0aGlzLmRldGFpbHM7CgogICAgY29uc29sZS5sb2coImdldCIpOwogICAgbGV0IHJlbW90ZVBhdGggPSAnL3RtcC9zb2xyLmxvZyc7CgoJCQlsZXQgb3B0aW9ucyA9IHsKCQkJICBjb25jdXJyZW5jeTogNjQsIAoJCQkgIGF1dG9DbG9zZTogZmFsc2UsCgkJCSAgY2h1bmtTaXplOiAzMjc2OCwgCgkJCSAgc3RlcDogZnVuY3Rpb24odG90YWxfdHJhbnNmZXJyZWQsIGNodW5rLCB0b3RhbCkgewoJCQkgICAgY29uc29sZS5sb2codG90YWxfdHJhbnNmZXJyZWQsdG90YWwpOwoJCQkgIH0KCQkJfTsKICAgIGxldCBjYiA9IGZ1bmN0aW9uKCl7CiAgICAJdGhpcy5jbGllbnQuZW5kKCk7CiAgICAgICAgY29uc29sZS5sb2coImVuZCIpOwogICAgICAgIHRoaXMub3V0U3RyZWFtLmNsb3NlKCk7CiAgICAgICBjb25zb2xlLmxvZygiQ09SRUxPR1MiKTsKICAgICAgbGV0IGRvbmUgPSB0cnVlOwogICAgICB0aGlzLmNvcmVMaXN0W3RoaXMuaW5kZXhdLmRhdGEgPSB0cnVlOwogICAgICBsZXQgbmV4dEluZGV4ID0gLTE7CgkJICBmb3IobGV0IGkgaW4gdGhpcy5jb3JlTGlzdCl7CgkJCSAgaWYoICF0aGlzLmNvcmVMaXN0W2ldLmRhdGEgKXsKCQkJCSAgZG9uZSA9IGZhbHNlOwoJCQkJICBuZXh0SW5kZXggPSBpOwoJCQkJICBicmVhazsKCQkJICB9CgkJICB9CgoJCSAgaWYoIGRvbmUgKXsKCQkJbGV0IG1lc3NhZ2VzID0gW3ttZXNzYWdlOiAiRE9ORSJ9XTsKCQkJCgkJCWNhbGxiYWNrKG1lc3NhZ2VzKTsKCQkgfQoJCSBlbHNlIHsKCQkgCWdldENvcmVMb2coY29uZmlnLGNvcmVMaXN0LGRldGFpbHMsY2FsbGJhY2ssbmV4dEluZGV4KTsKCQkgfQogICAgfS5iaW5kKHtjbGllbnQ6IGNsaWVudCxjb3JlTGlzdDogY29yZUxpc3QsaW5kZXg6IGluZGV4LG91dFN0cmVhbTogb3V0U3RyZWFtfSk7CiAKIAlsZXQgY2IyID0gZnVuY3Rpb24oKXsKCSAgICAvL2NvbnNvbGUuZXJyb3IoIkVSUk9SIixlcnIubWVzc2FnZSk7CgkgICAgdGhpcy5jYigpOwoJICB9LmJpbmQoe2NiOiBjYn0pOwogICAgIGNvbnNvbGUubG9nKCJjb25uZWN0IixyZW1vdGVQYXRoLG9wdGlvbnMpOwogICAgY2xpZW50LmdldChyZW1vdGVQYXRoLCBvdXRTdHJlYW0sb3B0aW9ucykudGhlbihjYikKCSAgLmNhdGNoKGNiMik7CgogICAgY2hlY2tTaXplKGNsaWVudCxjYik7CgoKCQkgIAogIH0KCiAgZnVuY3Rpb24gc2hhbGxvd0Nsb25lKGFyZ3MpewogIAlsZXQgcmVzdWx0ID0ge307CgogIAlpZiggYXJncyl7CgkgIAlmb3IobGV0IHAgaW4gYXJncyl7CgkgIAkJaWYoIGFyZ3MuaGFzT3duUHJvcGVydHkocCkgKSAKCSAgCQkJcmVzdWx0W3BdID0gYXJnc1twXTsKCSAgCX0KCX0KCiAgCS8vYWNvbnNvbGUubG9nKCJjbG9uZSIsYXJncyxyZXN1bHQpOwogIAlyZXR1cm4oIHJlc3VsdCApOwogIH0KCmZ1bmN0aW9uIGdldENvcmVMb2coY29uZmlnLGNvcmVMaXN0LGRldGFpbHMsY2FsbGJhY2ssc3RhcnRJbmRleCl7CgkKCWxldCBnZXRMb2dGaWxlID0gZnVuY3Rpb24oaSl7CgkJbGV0IHN0YXJ0VG9rZW4gPSAiaHR0cDovLyI7CgkJbGV0IGVuZFRva2VuID0gIi9zb2xyIjsKCQlsZXQgY29yZUxpc3QgPSB0aGlzLmNvcmVMaXN0OwoJCWxldCBjb25maWcgPSB0aGlzLmNvbmZpZzsKCQlsZXQgZGV0YWlscyA9IHRoaXMuZGV0YWlsczsKCQlsZXQgY2FsbGJhY2sgPSB0aGlzLmNhbGxiYWNrOwoKCQkvL2xldCBtZXNzYWdlcyA9IFtdOwoJCWlmKCBpIDwgY29yZUxpc3QubGVuZ3RoICl7CgkJCWxldCB0Q29yZSA9IGNvcmVMaXN0W2ldLnVybDsKCSAgICAgICAgbGV0IHRQYXRoID0gY29yZUxpc3RbaV0ucGF0aDsKCgkJCWxldCBpZHggPSB0Q29yZS5pbmRleE9mKHN0YXJ0VG9rZW4pOwoJCQlsZXQgc2lkeCA9IHRDb3JlLmluZGV4T2YoZW5kVG9rZW4pOwoJCQlpZiggaWR4ID4gLTEgJiYgc2lkeCA+IC0xICl7CgkJCQlsZXQgc291cmNlU29sckhvc3QgPSB0Q29yZS5zdWJzdHJpbmcoaWR4ICsgc3RhcnRUb2tlbi5sZW5ndGgsc2lkeCk7CgkJCQlsZXQgc291cmNlU29sclBvcnQgPSA4MDsKCQkJCWxldCBwaWR4ID0gc291cmNlU29sckhvc3QuaW5kZXhPZigiOiIpOwoJCQkJaWYoIHBpZHggPiAtMSApewoJCQkJCXNvdXJjZVNvbHJQb3J0ID0gc291cmNlU29sckhvc3Quc3Vic3RyaW5nKHBpZHgrMSk7CgkJCQkJc291cmNlU29sckhvc3QgPSBzb3VyY2VTb2xySG9zdC5zdWJzdHJpbmcoMCxwaWR4KTsKCQkJCX0KCQkJCWxldCB0Q29uZmlnID0gc2hhbGxvd0Nsb25lKGNvbmZpZyk7CgkJICAgICAgICB0Q29uZmlnLmhvc3QgPSBzb3VyY2VTb2xySG9zdDsKCQkgICAgICAgICAgIAoKCSAgICAgICAgICAgIC8vbGV0IHQgPSBodHRwLmdldCh7aG9zdDogc291cmNlU29sckhvc3QscG9ydDogc291cmNlU29sclBvcnQscGF0aDogdFBhdGh9LCB0Q2FsbGJhY2spOwoJICAgICAgICAgICAgbGV0IHNjYiA9IGZ1bmN0aW9uKCl7CgkgICAgICAgICAgICAJbGV0IHNmdENsaWVudCA9IG5ldyBTU0gyQ2xpZW50KCk7CgkJICAgICAgICAgICAgbGV0IHRDYWxsYmFjayA9IGdldENvcmVMb2dDYWxsYmFjay5iaW5kKHtzb3VyY2VTb2xySG9zdDogdGhpcy5zb3VyY2VTb2xySG9zdCxjbGllbnQ6IHNmdENsaWVudCxvdXRTdHJlYW06IHRoaXMub3V0U3RyZWFtLG91dEZpbGVOYW1lOnRoaXMub3V0RmlsZU5hbWUsZGV0YWlsczogdGhpcy5kZXRhaWxzLGluZGV4OiB0aGlzLmluZGV4LGNvcmVMaXN0OiB0aGlzLmNvcmVMaXN0LGNhbGxiYWNrOiB0aGlzLmNhbGxiYWNrfSk7CgkJICAgICAgICAgICAgCgkJICAgICAgICAgICAgc2Z0Q2xpZW50LmNvbm5lY3QodGhpcy5jb25maWcpLnRoZW4odENhbGxiYWNrKTsKCSAgICAgICAgICAgIH0uYmluZCh7c291cmNlU29sckhvc3Q6IHNvdXJjZVNvbHJIb3N0LG91dFN0cmVhbTogZGV0YWlscy5vdXRTdHJlYW0sb3V0RmlsZU5hbWU6ZGV0YWlscy5vdXRGaWxlTmFtZSxkZXRhaWxzOiBkZXRhaWxzLGluZGV4OiBpLGNvcmVMaXN0OiBjb3JlTGlzdCxjYWxsYmFjazogY2FsbGJhY2ssY29uZmlnOiB0Q29uZmlnfSk7CgkgICAgICAgICAgICAKCSAgICAgICAgICAgIGNvcHlGaWxlRmlyc3QodENvbmZpZyxzY2IpOwoJICAgICAgICB9CgkJfQoJfS5iaW5kKHtjb3JlTGlzdDogY29yZUxpc3QsY29uZmlnOiBjb25maWcsZGV0YWlsczogZGV0YWlscyxjYWxsYmFjazogY2FsbGJhY2t9KTsKCgoJaWYoIGNvcmVMaXN0Lmxlbmd0aCA9PSAwICkKCQljYWxsYmFjayhbe21lc3NhZ2U6ICJOT0NPUkUifV0pOwoJZWxzZQoJCWdldExvZ0ZpbGUoc3RhcnRJbmRleCk7Cn0KCgpmdW5jdGlvbiBnZXRMb2dzQ2FsbGJhY2socmVzKSB7CiAgbGV0IHN0ciA9ICIiOwogIGxldCBzb3VyY2VTb2xySG9zdCA9IHRoaXMuc291cmNlU29sckhvc3Q7CiAgbGV0IHNvdXJjZVNvbHJQb3J0ID0gdGhpcy5zb3VyY2VTb2xyUG9ydDsKICBsZXQgc291cmNlU29sckNvbGxlY3Rpb24gPSB0aGlzLnNvdXJjZVNvbHJDb2xsZWN0aW9uOwogIGxldCBvdXRGaWxlTmFtZSA9IHRoaXMub3V0RmlsZU5hbWU7CiAgbGV0IG91dFN0cmVhbSA9IHRoaXMub3V0U3RyZWFtOwogIGxldCBjYWxsYmFjayA9IHRoaXMuY2FsbGJhY2s7CiAgCiAgcmVzLm9uKCdkYXRhJywgZnVuY3Rpb24gKGNodW5rKSB7CiAgICAgICAgICAgICAgc3RyICs9IGNodW5rOwogICAgICAgICAgICAgIAogICAgICAgIH0pOwoKICByZXMub24oJ2VuZCcsIGZ1bmN0aW9uICgpIHsKICAgICAgICBjb25zb2xlLmxvZygiQ0xVU1RFUlNUQVRVUyIsc291cmNlU29sckhvc3Qsc291cmNlU29sclBvcnQsc291cmNlU29sckNvbGxlY3Rpb24pOwoJCWxldCBjbHVzdGVyU3RhdHVzID0gSlNPTi5wYXJzZShzdHIpOwoJCQoJCWlmKCBjbHVzdGVyU3RhdHVzLmNsdXN0ZXIgICYmIGNsdXN0ZXJTdGF0dXMuY2x1c3Rlci5jb2xsZWN0aW9ucyAmJiBjbHVzdGVyU3RhdHVzLmNsdXN0ZXIuY29sbGVjdGlvbnNbc291cmNlU29sckNvbGxlY3Rpb25dICl7CgkJCWxldCBjb2xsZWN0aW9uSW5mbyA9IGNsdXN0ZXJTdGF0dXMuY2x1c3Rlci5jb2xsZWN0aW9uc1tzb3VyY2VTb2xyQ29sbGVjdGlvbl07CgoJCQlpZiggY29sbGVjdGlvbkluZm8uc2hhcmRzICl7CgkJCQlsZXQgY29yZUxpc3QgPSBbXTsKCQkJCWZvcihsZXQgcyBpbiBjb2xsZWN0aW9uSW5mby5zaGFyZHMpewoJCQkJCWxldCBzaGFyZCA9IGNvbGxlY3Rpb25JbmZvLnNoYXJkc1tzXTsKCQkJCQlmb3IobGV0IHIgaW4gc2hhcmQucmVwbGljYXMpewogICAgICAgICAgICAgICAgICAgICAgICBsZXQgcmVwbGljYSA9IHNoYXJkLnJlcGxpY2FzW3JdOwogICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygicmVwbGljYSIscmVkYWN0KHJlcGxpY2EsInBhc3N3b3JkIikpOwoJCQkJCQlpZiggcmVwbGljYS5zdGF0ZSA9PSAnYWN0aXZlJyApewoJCQkJCQkJY29yZUxpc3QucHVzaCh7dXJsOiByZXBsaWNhLmJhc2VfdXJsLHBhdGg6Ii9zb2xyL2FkbWluL2luZm8vbG9nZ2luZz9fPTE1NzQyMDA0MzE2NzEmc2luY2U9MCZ3dD1qc29uIn0pOwoJCQkJCQkJLy9icmVhazsKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJCWdldENvcmVMb2coY29uZmlnLGNvcmVMaXN0LHtvdXRGaWxlTmFtZTogb3V0RmlsZU5hbWUsb3V0U3RyZWFtOiBvdXRTdHJlYW19LGNhbGxiYWNrLDApOwoJCQl9CgkJCWVsc2UgewoJCQkJY2FsbGJhY2soe2NvbGxlY3Rpb246IHNvdXJjZVNvbHJDb2xsZWN0aW9uLG1lc3NhZ2VzOiBbe21lc3NhZ2U6ICJOTyBTSEFSRFMifV19KTsKCQkJfQoJCX0KCQllbHNlIHsKCQkJY29uc29sZS5sb2coIk5PIERFU1RJTkFUSU9OIixzb3VyY2VTb2xyQ29sbGVjdGlvbik7CgkJCWNhbGxiYWNrKHtjb2xsZWN0aW9uOiBzb3VyY2VTb2xyQ29sbGVjdGlvbixtZXNzYWdlczogW3ttZXNzYWdlOiAiTk8gREVTVElOQVRJT04ifV19KTsKCQl9CiAgfSk7Cn0KCmZ1bmN0aW9uIGdldENvcmVTdGF0cyhhcmdzLGNhbGxiYWNrKXsKCWxldCBzb3VyY2VTb2xySG9zdCA9IGFyZ3MuaGFzT3duUHJvcGVydHkoJ3NvdXJjZVNvbHJIb3N0JykgPyBhcmdzWydzb3VyY2VTb2xySG9zdCddIDogImMzLnNvbHJjbG91ZC5zZXJ2aWNlLmludHJhYm8xLmNvbnN1bC5jc256b28uY29tIjsKCWxldCBzb3VyY2VTb2xyUG9ydCA9IGFyZ3MuaGFzT3duUHJvcGVydHkoJ3NvdXJjZVNvbHJQb3J0JykgPyBhcmdzWydzb3VyY2VTb2xyUG9ydCddIDogODE4MDsKCWxldCBzb3VyY2VTb2xyQ29sbGVjdGlvbiA9IGFyZ3MuaGFzT3duUHJvcGVydHkoJ3NvdXJjZVNvbHJDb2xsZWN0aW9uJykgPyBhcmdzWydzb3VyY2VTb2xyQ29sbGVjdGlvbiddIDogJ2Rlbm9ybV91cyc7CiAgICBsZXQgb3V0RmlsZU5hbWUgPSBhcmdzLmhhc093blByb3BlcnR5KCdvdXRGaWxlTmFtZScpID8gYXJnc1snb3V0RmlsZU5hbWUnXSA6ICcvd2F5ZmFpci9kYXRhL2Rlbm9ybV9zb2xyLmxvZyc7CiAgICB2YXIgb3V0U3RyZWFtID0gZnMuY3JlYXRlV3JpdGVTdHJlYW0ob3V0RmlsZU5hbWUpOwogICAgICAgIGNvbW1hbmRMaW5lLm91dEZpbGVOYW1lID0gb3V0RmlsZU5hbWU7CglvdXRTdHJlYW0ud3JpdGFibGUgPSB0cnVlOwogICAgbGV0IG1heFNpemUgPSBhcmdzLmhhc093blByb3BlcnR5KCdtYXhTaXplJykgPyBhcmdzWydtYXhTaXplJ10gOiAxMCoxMDAwMDAwOwogICAgICAgY29tbWFuZExpbmUubWF4U2l6ZSA9IG1heFNpemU7CglsZXQgdENhbGxiYWNrID0gZ2V0TG9nc0NhbGxiYWNrLmJpbmQoe3NvdXJjZVNvbHJIb3N0OiBzb3VyY2VTb2xySG9zdCxzb3VyY2VTb2xyUG9ydDogc291cmNlU29sclBvcnQsc291cmNlU29sckNvbGxlY3Rpb246IHNvdXJjZVNvbHJDb2xsZWN0aW9uLG91dEZpbGVOYW1lOiBvdXRGaWxlTmFtZSxvdXRTdHJlYW06IG91dFN0cmVhbSxjYWxsYmFjazogY2FsbGJhY2t9KTsKCWxldCB0ID0gaHR0cC5nZXQoe2hvc3Q6IHNvdXJjZVNvbHJIb3N0LHBvcnQ6IHNvdXJjZVNvbHJQb3J0LHBhdGg6ICIvc29sci9hZG1pbi9jb2xsZWN0aW9ucz9hY3Rpb249Q0xVU1RFUlNUQVRVUyZ3dD1qc29uIn0sIHRDYWxsYmFjayx0Q2FsbGJhY2spOwp9CgpmdW5jdGlvbiBjYihtZXNzYWdlcyl7Cgljb25zb2xlLmxvZygiY29tcGxldGUiLG1lc3NhZ2VzKTsKfQpnZXRDb3JlU3RhdHMoY29tbWFuZExpbmUsY2IpOwoKCn0=",
        "_version_":1778036409369624576},
      {
        "assetname":"buildSampleScript",
        "assettype":"script",
        "assetnotes":"",
        "assetscript_s":"testName=",
        "id":"ASSET1695667578804",
        "contenttype":"ASSET",
        "crawldate":"2023-09-25T18:46:19.093Z",
        "assetscript":"",
        "_version_":1778036327416070144}



        testsample

        {
        "testname":"listC",
        "comments":"listC",
        "testsample":"listC",
        "testnotes":"YmFzZQ==",
        "testdetailscript":"QVNTRVQ6ZGV0YWlsc1NjcmlwdA==",
        "testdetailscript_s":"",
        "testharvestscript":"QVNTRVQ6aGFydmVzdExvZ0ZpbGVzU2NyaXB0",
        "testharvestscript_s":"username=search password= maxSize=10000000 sourceSolrHost=server1 sourceSolrCollection=collection1 outFileName=/tmp/out_solr.log",
        "testcopyscript":"QVNTRVQ6Y29weUNvbGxlY3Rpb25TY3JpcHQ=",
        "testcopyscript_s":"testName=listC sourceSolrIdField=id sourceSolrHostA=server1 sourceSolrCollectionA=collection1 destinationSolrHostA=server2 destinationSolrCollectionA=collection2 sourceSolrHostB=server1 sourceSolrCollectionB=collection1 destinationSolrHostB=server2 destinationSolrCollectionB=collection2",
        "testbuildscript":"QVNTRVQ6YnVpbGRTYW1wbGVTY3JpcHQ=",
        "testbuildscript_s":"inFileName=/tmp/out_solr.log testName=listC useAsSeed=true csvData= requiredTag=",
        "testextractscript":"QVNTRVQ6ZXh0cmFjdEdyb3VwU2NyaXB0",
        "testextractscript_s":"testName=listC vehicleId=0 sourceIdField=partTypeName,eCommerceProductId,itemId,itemDescription",
        "testinterpretscript":"QVNTRVQ6aW50ZXJwcmV0U2NyaXB0",
        "testinterpretscript_s":"",
        "testsummaryscript":"QVNTRVQ6c3VtbWFyaXplU2NyaXB0",
        "testsummaryscript_s":"testName=listC",
        "testsummaryextractscript":"QVNTRVQ6c3VtbWFyeUV4cG9ydFNjcmlwdA==",
        "testsummaryextractscript_s":"testName=listC",
        "id":"TEST1699972340287",
        "contenttype":"TEST",
        "crawldate":"2023-11-14T14:32:20.489Z",
        "_version_":1782550196900593664}


        {
        "testname":"skuC",
        "comments":"skuC",
        "testsample":"skuC",
        "testnotes":"YmFzZQ==",
        "testdetailscript":"QVNTRVQ6ZGV0YWlsc1NjcmlwdA==",
        "testdetailscript_s":"",
        "testharvestscript":"QVNTRVQ6aGFydmVzdExvZ0ZpbGVzU2NyaXB0",
        "testharvestscript_s":"username=search password= maxSize=10000000 sourceSolrHost=server1 sourceSolrCollection=collection1 outFileName=/tmp/out_solr.log",
        "testcopyscript":"QVNTRVQ6Y29weUNvbGxlY3Rpb25TY3JpcHQ=",
        "testcopyscript_s":"testName=skuC FsourceSolrIdField=id sourceSolrHostA=server1 sourceSolrCollectionA=collection1 destinationSolrHostA=server2 destinationSolrCollectionA=collection2 sourceSolrHostB=server1 sourceSolrCollectionB=collection1 destinationSolrHostB=server2 destinationSolrCollectionB=collection2",
        "testbuildscript":"QVNTRVQ6YnVpbGRTYW1wbGVTY3JpcHQ=",
        "testbuildscript_s":"inFileName=/tmp/out_solr.log testName=skuC useAsSeed=true csvData= requiredTag=",
        "testextractscript":"QVNTRVQ6ZXh0cmFjdFNjcmlwdA==",
        "testextractscript_s":"testName=skuC vehicleId=0 sourceIdField=partTypeName,eCommerceProductId,itemId,itemDescription,partNumber",
        "testinterpretscript":"QVNTRVQ6aW50ZXJwcmV0U2NyaXB0",
        "testinterpretscript_s":"",
        "testsummaryscript":"QVNTRVQ6c3VtbWFyaXplU2NyaXB0",
        "testsummaryscript_s":"testName=skuC",
        "testsummaryextractscript":"QVNTRVQ6c3VtbWFyeUV4cG9ydFNjcmlwdA==",
        "testsummaryextractscript_s":"testName=skuC",
        "id":"TEST1699972301495",
        "contenttype":"TEST",
        "crawldate":"2023-11-14T14:31:41.739Z",
        "_version_":1782550156271419392}
